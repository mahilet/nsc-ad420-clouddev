{
  "swagger": "2.0",
  "info": {
    "description": "Mahilet  Cloud Development Hands On Task API",
    "version": "1.0.0",
    "title": "Mahilet AD420 Cloud Development Hands On Task API",
    "contact": {
      "email": "mehalu15jan2013@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "Perform User Account information"
    },
    {
      "name": "tasks",
      "description": "Performance tasks "
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "user object that needs to be added to the store",
        "description": "Find users by their usernames",
        "operationId": "userFind",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "user to Find",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "search user by their requirements",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "invalid input"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new user",
        "description": "Add a user in database",
        "operationId": "userAdd",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newUser",
            "description": "added new user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Create user",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "404": {
            "description": "invalid input"
          },
          "405": {
            "description": "User already exists"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get a user by id",
        "description": "Find by user id",
        "operationId": "userIdFound",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Find By id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "user found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "can't find user id "
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "update user Status",
        "description": "status update",
        "operationId": "updateUserstatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "update the user ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "updateUser",
            "description": "update user Status",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user updated"
          },
          "404": {
            "description": "user ID not found"
          },
          "405": {
            "description": "invalid ID"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "description": "delete user ID",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Remove the user ID",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Remove the User successfully"
          },
          "404": {
            "description": "can't find user Id "
          },
          "405": {
            "description": "Invalid user Id "
          }
        }
      }
    },
    "/users/{userid}/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "View user task",
        "description": "find user's tasks",
        "operationId": "taskFind",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "user ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Search for a task when you know its task ID",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          },
          "404": {
            "description": "Can not found task"
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Assigning a new user to a task",
        "description": "Add Task ID and type the task ID in the box",
        "operationId": "AddTasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "AddnewTask",
            "description": "Add new task",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Create task",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "404": {
            "description": "Task not found"
          },
          "405": {
            "description": "invalid input Task"
          }
        }
      }
    },
    "/users/{userid}/tasks/{taskid}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "View new task by ID",
        "description": "Search a new task",
        "operationId": "taskIdSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "description": "user ID",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "Search a task",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "task found",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          },
          "404": {
            "description": "Can not found task"
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Update Role Users task",
        "description": "Updating Task Status",
        "operationId": "updateTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "taskid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "updateTask",
            "description": "successfully updated tasks",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "record has been Updated successfully"
          },
          "404": {
            "description": "task ID not found"
          },
          "405": {
            "description": "Invalid  task ID"
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "user task are deleted",
        "description": "delete task",
        "operationId": "deleteTask",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "taskid",
            "in": "path",
            "description": "Deleted task ID ",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "record has been successfully deleted"
          },
          "404": {
            "description": "task ID not found"
          },
          "405": {
            "description": "invalid task ID"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "userId",
        "userName"
      ],
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64",
          "example": 9890474659
        },
        "userName": {
          "type": "string",
          "example": "mehalu2013"
        },
        "firstName": {
          "type": "string",
          "example": "Mehalu"
        },
        "lastName": {
          "type": "string",
          "example": "Dereje"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      }
    },
    "Task": {
      "required": [
        "taskId",
        "taskName"
      ],
      "properties": {
        "taskId": {
          "type": "integer",
          "format": "int64",
          "example": 980473659
        },
        "taskName": {
          "type": "string",
          "example": "Create Virtual Machines with RDMs"
        },
        "complete": {
          "type": "boolean",
          "default": false
        }
      }
    }
  }
}